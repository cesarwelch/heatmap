{"version":3,"sources":["assets/hrt2022.jpg","util/dataTransformer.js","Component/ToggleFilter.js","Component/Heatmap.js","App.js","reportWebVitals.js","index.js"],"names":["dataTransformer","allData","day","granularity","returnData","dataOfDay","getDayXData","data","getGranularityXData","maxSlider","length","maxValue","filter","row","Date","timestamp","getDate","returnValue","dataSet","i","j","founded","find","point","name","value","push","getItcData","a","fetch","process","r","json","granularityFiltersOptions","daysFilterOption","retVal","label","eventDays","eventMonth","daysFiltersOptions","ToggleFilter","props","setValue","options","ToggleButtonGroup","exclusive","unselectable","onChange","event","newValue","aria-label","style","background","color","map","option","index","ToggleButton","Heatmap","useState","14","1","30","60","180","15","16","all","transformedSourceData","setTransformedSourceData","heatMapInstance","setHeatMapInstance","mainData","setMainData","pointsInfo","setPointsInfo","sliderCount","setSliderCount","delay","useBoolean","isRunning","toggleIsRunning","setGranularity","date","setDate","useInterval","getData","useCallback","transformedData","prev","temp","useEffect","instance","h337","create","container","document","querySelector","minOpacity","gradient","max","min","setData","width","paddingBottom","textAlign","fontSize","display","id","className","height","src","Image","alt","paddingLeft","Button","variant","onClick","Slider","defaultValue","valueLabelDisplay","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.679cf39c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hrt2022.929f43ec.jpg\";","export const dataTransformer = (allData, day, granularity) => {\n  const dataOfDay = getDayXData(allData, day);\n\n  let returnData;\n  switch (granularity) {\n    case 1:\n      returnData = getGranularityXData(dataOfDay, 1);\n      return {\n        data: returnData.data,\n        maxSlider: returnData.data.length,\n        maxValue: returnData.maxValue,\n      };\n    case 30:\n      returnData = getGranularityXData(dataOfDay, 30);\n      return {\n        data: returnData.data,\n        maxSlider: returnData.data.length,\n        maxValue: returnData.maxValue,\n      };\n    case 60:\n      returnData = getGranularityXData(dataOfDay, 60);\n      return {\n        data: returnData.data,\n        maxSlider: returnData.data.length,\n        maxValue: returnData.maxValue,\n      };\n    case 180:\n      returnData = getGranularityXData(dataOfDay, 180);\n      return {\n        data: returnData.data,\n        maxSlider: returnData.data.length,\n        maxValue: returnData.maxValue,\n      };\n    case \"day\":\n      returnData = getGranularityXData(dataOfDay, 661);\n      return {\n        data: returnData.data,\n        maxSlider: returnData.data.length,\n        maxValue: returnData.maxValue,\n      };\n    default:\n    case \"all\":\n      returnData = getGranularityXData(dataOfDay, 8320);\n      return {\n        data: returnData.data,\n        maxSlider: returnData.data.length,\n        maxValue: returnData.maxValue,\n      };\n  }\n};\n\nconst getDayXData = (allData, day) => {\n  let returnData = allData;\n  if (day !== \"all\") {\n    returnData = allData.filter((row) => {\n      return day === new Date(row[0].timestamp).getDate();\n    });\n  }\n  return returnData;\n};\n\nconst getGranularityXData = (dataOfDay, granularity) => {\n  const returnValue = [];\n  let dataSet = [];\n  let maxValue = 0;\n  for (let i = 0; i < dataOfDay.length; i++) {\n    for (let j = 0; j < dataOfDay[i].length; j++) {\n      const founded = dataSet.find(\n        (point) => point.name === dataOfDay[i][j].name\n      );\n      if (founded) {\n        founded.value += dataOfDay[i][j].value;\n      } else {\n        dataSet.push(dataOfDay[i][j]);\n      }\n      if (dataOfDay[i][j].value > maxValue) {\n        if (founded) {\n          maxValue = founded.value;\n        } else {\n          maxValue = dataOfDay[i][j].value;\n        }\n      }\n    }\n    if (i && (i % granularity === 0 || i === dataOfDay.length - 1)) {\n      returnValue.push(dataSet);\n      dataSet = [];\n    }\n  }\n  return { data: returnValue, maxValue };\n};\n\nexport const getItcData = async () => {\n  const r = await fetch(\n    `${\n      process.env.REACT_APP_HOST_URL || \"https://heatmap-52cff.web.app/\"\n    }hrt2022.json`\n  );\n  return await r.json();\n};\n\nexport const granularityFiltersOptions = (daysFilterOption) => {\n  const retVal = [\n    { value: 1, label: \"1 Minute\" },\n    { value: 30, label: \"30 Minutes\" },\n    { value: 60, label: \"1 Hour\" },\n    { value: 180, label: \"3 Hours\" },\n    { value: \"day\", label: \"Day\" },\n  ];\n  if (daysFilterOption === \"all\") {\n    retVal.push({ value: \"all\", label: \"All Event\" });\n  }\n  return retVal;\n};\n\nexport const eventDays = [14, 15, 16];\nexport const eventMonth = \"March\";\n\nexport const daysFiltersOptions = [\n  { value: eventDays[0], label: `${eventDays[0]}th ${eventMonth}` },\n  { value: eventDays[1], label: `${eventDays[1]}th ${eventMonth}` },\n  { value: eventDays[2], label: `${eventDays[2]}th ${eventMonth}` },\n  { value: \"all\", label: \"All Event\" },\n];\n","import React from \"react\";\n\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\n\nexport default function ToggleFilter(props) {\n  const { value, setValue, options } = props;\n\n  const handleChange = (event, newValue) => {\n    if (newValue) setValue(newValue);\n  };\n\n  return (\n    <ToggleButtonGroup\n      value={value}\n      exclusive\n      unselectable\n      onChange={handleChange}\n      aria-label=\"text alignment\"\n      style={{ background: \"white\" }}\n      color=\"primary\"\n    >\n      {options.map((option, index) => (\n        <ToggleButton\n          key={`${index}-toggleButton`}\n          //   style={{ whiteSpace: \"nowrap\" }}\n          value={option.value}\n          aria-label=\"left aligned\"\n        >\n          {option.label}\n        </ToggleButton>\n      ))}\n    </ToggleButtonGroup>\n  );\n}\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport h337 from \"heatmapjs\";\nimport Slider from \"@mui/material/Slider\";\nimport Image from \"../assets/hrt2022.jpg\";\n// import { x as ogData } from \"../assets/heatmapdata\";\nimport Button from \"@mui/material/Button\";\nimport { useInterval, useBoolean } from \"react-use\";\nimport {\n  getItcData,\n  dataTransformer,\n  granularityFiltersOptions,\n  daysFiltersOptions,\n} from \"../util/dataTransformer\";\nimport \"./styles.css\";\nimport ToggleFilter from \"./ToggleFilter\";\n\nexport default function Heatmap() {\n  const [transformedSourceData, setTransformedSourceData] = useState({\n    14: { 1: [], 30: [], 60: [], 180: [], day: [] },\n    15: { 1: [], 30: [], 60: [], 180: [], day: [] },\n    16: { 1: [], 30: [], 60: [], 180: [], day: [] },\n    all: { 1: [], 30: [], 60: [], 180: [], day: [], all: [] },\n  });\n  const [heatMapInstance, setHeatMapInstance] = useState();\n  const [mainData, setMainData] = useState({\n    data: [],\n    maxSlider: 0,\n    maxValue: 0,\n  });\n  const [pointsInfo, setPointsInfo] = useState([]);\n  const [sliderCount, setSliderCount] = useState(0);\n  const [delay] = useState(100);\n  const [isRunning, toggleIsRunning] = useBoolean(false);\n  const [granularity, setGranularity] = useState(1);\n  const [date, setDate] = useState(14);\n\n  useInterval(\n    () => {\n      if (mainData.maxSlider > sliderCount) {\n        setSliderCount(sliderCount + 1);\n        setPointsInfo(mainData.data[sliderCount]);\n      } else {\n        toggleIsRunning(false);\n      }\n    },\n    isRunning ? delay : null\n  );\n\n  const getData = useCallback(async () => {\n    if (transformedSourceData[date][granularity].maxSlider) {\n      setMainData(transformedSourceData[date][granularity]);\n    } else {\n      let transformedData;\n      const returnData = await getItcData();\n      transformedData = dataTransformer(returnData, date, granularity);\n      setTransformedSourceData((prev) => {\n        const temp = { ...prev };\n        temp[date][granularity] = transformedData;\n        return temp;\n      });\n      setMainData(transformedData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date, granularity]);\n\n  useEffect(() => {\n    getData();\n  }, [date, granularity, getData]);\n\n  useEffect(() => {\n    if (mainData?.data?.length === 0) {\n      getData();\n    }\n    if (mainData.maxSlider === 0 && !heatMapInstance) {\n      const instance = h337.create({\n        container: document.querySelector(\".heatmap\"),\n        minOpacity: \".4\",\n        gradient: {\n          \".01\": \"blue\",\n          \".25\": \"cyan\",\n          \".5\": \"yellow\",\n          \".75\": \"orange\",\n          1: \"red\",\n        },\n      });\n      setHeatMapInstance(instance);\n    }\n\n    if (mainData.maxSlider > 0 && heatMapInstance) {\n      let dataSet = {\n        max: mainData.maxValue,\n        min: 0,\n        data: mainData.data[sliderCount],\n      };\n      heatMapInstance && heatMapInstance.setData(dataSet);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [heatMapInstance, getData]);\n\n  const handleHeatmap = (e, value) => {\n    if (isRunning) {\n      toggleIsRunning(false);\n    }\n\n    setPointsInfo(mainData.data[value]);\n    setSliderCount(value);\n  };\n\n  useEffect(() => {\n    let dataSet = {\n      max: mainData.maxValue,\n      min: 0,\n      data: pointsInfo,\n    };\n\n    heatMapInstance &&\n      pointsInfo.length > 0 &&\n      heatMapInstance.setData(dataSet);\n  }, [heatMapInstance, mainData, pointsInfo]);\n\n  return (\n    <>\n      <div\n        style={{\n          width: \"600px\",\n          paddingBottom: \"1rem\",\n          textAlign: \"left\",\n          fontSize: \"1.5rem\",\n        }}\n      >\n        <div>\n          <div\n            style={{\n              paddingBottom: \"1rem\",\n            }}\n          >\n            <div>\n              <span>Granularity</span>\n            </div>\n            <ToggleFilter\n              value={granularity}\n              setValue={(newValue) => {\n                setSliderCount(0);\n                setGranularity(newValue);\n              }}\n              options={granularityFiltersOptions(date)}\n            />\n          </div>\n\n          <div>\n            <div>\n              <span>Date</span>\n            </div>\n            <div>\n              <ToggleFilter\n                value={date}\n                setValue={(newValue) => {\n                  setSliderCount(0);\n                  setDate(newValue);\n                  setPointsInfo(mainData.data[0]);\n\n                  if (newValue !== \"all\") {\n                    setGranularity(1);\n                  }\n                }}\n                options={daysFiltersOptions}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <div id=\"mydiv\" className=\"heatmap\" style={{ display: \"block\" }}>\n          <img height=\"522px\" width=\"1068px\" src={Image} alt=\"road\" />\n        </div>\n        <div style={{ textAlign: \"left\", paddingLeft: \"2rem\" }}>\n          <div>blue: 0 - {mainData.maxValue * 0.01}</div>\n          <div>\n            cyan: {mainData.maxValue * 0.01} - {mainData.maxValue * 0.25}\n          </div>\n          <div>\n            yellow: {mainData.maxValue * 0.25} - {mainData.maxValue * 0.5}\n          </div>\n          <div>\n            orange: {mainData.maxValue * 0.5} - {mainData.maxValue * 0.75}\n          </div>\n          <div>\n            red: {mainData.maxValue * 0.75} - {mainData.maxValue}\n          </div>\n          {mainData.maxSlider > 1 && (\n            <Button\n              variant=\"outlined\"\n              style={{ background: \"white\" }}\n              onClick={toggleIsRunning}\n            >\n              {isRunning ? \"Cancel\" : \"Auto Play\"}\n            </Button>\n          )}\n        </div>\n      </div>\n      <div style={{ width: \"600px\" }}>\n        {mainData.maxSlider > 1 && (\n          <Slider\n            max={mainData.maxSlider - 1 || 0}\n            defaultValue={0}\n            aria-label=\"Default\"\n            valueLabelDisplay=\"auto\"\n            onChange={handleHeatmap}\n            value={sliderCount}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n","import \"./App.css\";\nimport Heatmap from \"./Component/Heatmap\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Heatmap />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}